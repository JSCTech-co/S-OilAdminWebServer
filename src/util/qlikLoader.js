const ticket_api = 'http://localhost:8123/qlik/ticket'
//const vp_prefix = '/qlikticket'
const vp_prefix = 'https://dev.jsct.site/ticket'

export async function ensureQlikSession() {
    const ticket = await issueTicket()          // 1) 티켓 발급
    await establishSession(ticket)              // 2) 세션 수립
    await loadQlikResources()                   // 3) CSS/JS 주입
}

async function loadQlikResources() {
    await injectLink(`${vp_prefix}/resources/autogenerated/qlik-styles.css`)
    await injectScript(`${vp_prefix}/resources/assets/external/requirejs/require.js`)
}

async function issueTicket() {
    const payload = {
        userId: 'user01',
        userDirectory: 'DEV-QLIK'
    }

    const resp = await fetch(ticket_api, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
    })

    if(!resp.ok) throw new Error('Ticket Fail')
    const json = await resp.json();
    return json.Ticket;
}

async function establishSession(ticket){
    const xrfkey = 'somerandomstring'
    const res = await fetch(
        `${vp_prefix}/qrs/about?xrfkey=${xrfkey}&qlikTicket=${ticket}`,
        {
            method: 'GET',
            headers: { 'X-Qlik-XrfKey': xrfkey},
            credentials: 'include'
        }
    )
    if(!res.ok) throw new Error('about fail')
}

function injectLink(href) {
    return new Promise((resolve, reject) => {
        if (document.querySelector(`link[data-qlik-src="${href}"]`)) return resolve()
        const el = document.createElement('link')
        el.rel = 'stylesheet'
        el.href = href
        el.dataset.qlikSrc = href
        el.onload = resolve
        el.onerror = () => reject(new Error(`CSS 로드 실패: ${href}`))
        document.head.appendChild(el)
    })
}

function injectScript(src) {
    return new Promise((resolve, reject) => {
        if (document.querySelector(`script[data-qlik-src="${src}"]`)) return resolve()
        const el = document.createElement('script')
        el.src = src
        el.defer = true
        el.dataset.qlikSrc = src
        el.onload = resolve
        el.onerror = () => reject(new Error(`JS 로드 실패: ${src}`))
        document.head.appendChild(el)
    })
}